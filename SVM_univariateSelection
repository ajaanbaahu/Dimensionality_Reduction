import numpy as np
import time
import pylab as pl

from sklearn import svm

from sklearn.feature_selection import SelectPercentile, f_classif


tic=time.time()
with open('Train.csv') as f:

    data=np.genfromtxt('Train.csv',delimiter=',')
    data_training=data.T
    data_label=np.genfromtxt('TrainLabels.csv',delimiter=',')



data_small=data_training[:,0:2000]-1

# print np.shape(data_small)


########################################################################

pl.figure(1)

pl.clf()

X_indices=np.arange(data_small.shape[-1])

# X_add=np.ones((X_indices))

# print np.shape(X_add)


#################################################################

selector=SelectPercentile(f_classif,percentile=10)

selector.fit(data_small,data_label)

scores=-np.log10(selector.pvalues_)

scores /= scores.max()

pl.bar(X_indices - .45, scores, width=.2, color='g')

########################################################################


clf=svm.SVC(kernel='linear')

clf.fit(data_small,data_label)

svm_weights=(clf.coef_**2).sum(axis=0)
svm_weights /= svm_weights.max()

pl.bar(X_indices-.25,svm_weights,width=.2,label='SVM weight',color='r')



clf_selected=svm.SVC(kernel='linear')
clf_selected.fit(selector.transform(data_small),data_label)

svm_weights_selected=(clf_selected.coef_**2)#.sum(axis=0)

#svm_weights_selected /= svm_weights_selected.max()

# pl.bar(X_indices[selector.get_support()] - 0.5, svm_weights_selected,width=.2, label='SVM weights after selection', color='g')
# #
# pl.title("Comparing feature selection")
# pl.xlabel('Feature number')
# pl.yticks(())
# pl.axis('tight')
# pl.legend(loc='upper right')
# pl.show()
#
# #result=svm_weights_selected.argsort()
# result= (sorted(zip(((svm_weights_selected)),X_indices[selector.get_support()]))[-5:])
#
# toc=time.time()-tic
# np.set_printoptions(suppress=True)

#print result

print np.shape(svm_weights_selected)

